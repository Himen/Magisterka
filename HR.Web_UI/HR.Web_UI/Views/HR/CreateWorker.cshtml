@model HR.Web_UI.Models.ViewModels.PersonViewModel

@{
    ViewBag.Title = "Dodaj pracownika";
}

<script type="text/javascript">
    function ShowpImagePreview(input) {
        if (input.files && input.files[0]) {
            var reader = new FileReader();
            reader.onload = function (e) {
                $('#imgprvw').attr('src', e.target.result);
            }
            reader.readAsDataURL(input.files[0]);
        }
    }
</script>

<h2 class="col-lg-offset-4 m_b_30">Dodaj pracownika - dane osobowe</h2>

<div id="formContener" class="col-lg-6 col-lg-offset-3 form-group">
    @using (Ajax.BeginForm("CreateWorker", "HR",
            new AjaxOptions { UpdateTargetId = "formContener", LoadingElementId = "loading-indicator", LoadingElementDuration = 10000 }
            , new { enctype = "multipart/form-data", method = "POST" }))
    {

    <div class="panel panel-default">
        <div class="panel-heading">Dane pracownika</div>
        <div class="panel-body">

            <div class="input-group">
                <span class="input-group-addon">@Html.LabelFor(p => p.FirstName)</span>
                @Html.TextBoxFor(p => p.FirstName, new { type = "text", @class = "form-control", placeholder = "Imię" })

            </div>
            @Html.ValidationMessageFor(p => p.FirstName)<br />

            <div class="input-group">
                <span class="input-group-addon">@Html.LabelFor(p => p.Surname)</span>
                @Html.TextBoxFor(p => p.Surname, new { type = "text", @class = "form-control", placeholder = "Nazwisko" })

            </div>
            @Html.ValidationMessageFor(p => p.Surname)<br />

            <div class="input-group">
                <span class="input-group-addon">@Html.LabelFor(p => p.City)</span>
                @Html.TextBoxFor(p => p.City, new { type = "text", @class = "form-control", placeholder = "Miasto" })

            </div>
            @Html.ValidationMessageFor(p => p.City)<br />

            <div class="input-group">
                <span class="input-group-addon">@Html.LabelFor(p => p.DateOfBirth)</span>
                @Html.TextBoxFor(p => p.DateOfBirth, new { type = "date", @class = "form-control", placeholder = "Data urodzenia" })

            </div>
            @Html.ValidationMessageFor(p => p.DateOfBirth)<br />

            <div class="input-group">
                <span class="input-group-addon">@Html.LabelFor(p => p.Street)</span>
                @Html.TextBoxFor(p => p.Street, new { type = "text", @class = "form-control", placeholder = "Ulica" })

            </div>
            @Html.ValidationMessageFor(p => p.Street)<br />

            <div class="input-group">
                <span class="input-group-addon">@Html.LabelFor(p => p.PostalCode)</span>
                @Html.TextBoxFor(p => p.PostalCode, new { type = "text", @class = "form-control", placeholder = "Kod pocztowy" })

            </div>
            @Html.ValidationMessageFor(p => p.PostalCode)<br />

            <div class="input-group">
                <span class="input-group-addon">@Html.LabelFor(p => p.BuildingNumber)</span>
                @Html.TextBoxFor(p => p.BuildingNumber, new { type = "text", @class = "form-control", placeholder = "Numer budynku" })

            </div>
            @Html.ValidationMessageFor(p => p.BuildingNumber)<br />

            <div class="input-group">
                <span class="input-group-addon">@Html.LabelFor(p => p.ApartmentNumber)</span>
                @Html.TextBoxFor(p => p.ApartmentNumber, new { type = "text", @class = "form-control", placeholder = "Numer mieszkania" })

            </div>
            @Html.ValidationMessageFor(p => p.ApartmentNumber)<br />

            <div class="input-group">
                <span class="input-group-addon">@Html.LabelFor(p => p.Phone)</span>
                @Html.TextBoxFor(p => p.Phone, new { type = "tel", @class = "form-control", placeholder = "Telefon" })

            </div>
            @Html.ValidationMessageFor(p => p.Phone)<br />

            <div class="input-group">
                <span class="input-group-addon">@Html.LabelFor(p => p.Email)</span>
                @Html.TextBoxFor(p => p.Email, new { type = "email", @class = "form-control", placeholder = "Email" })

            </div>
            @Html.ValidationMessageFor(p => p.Email)<br />

            <div class="input-group">
                <span class="input-group-addon">@Html.LabelFor(p => p.AccountType)</span>
                @Html.EnumDropDownListFor(p => p.AccountType, new { @class = "form-control" })
            </div>
            @Html.ValidationMessageFor(p => p.AccountType)<br />

            @*<div class="input-group">
            <span class="input-group-addon">@Html.LabelFor(p => p.Profession)</span>
            @Html.EnumDropDownListFor(p => p.Profession, new { @class = "form-control" })
        </div>
        @Html.ValidationMessageFor(p => p.Profession)<br />*@

            <div class="input-group">
                <span class="input-group-addon">@Html.LabelFor(p => p.NIP)</span>
                @Html.TextBoxFor(p => p.NIP, new { type = "text", @class = "form-control", placeholder = "NIP" })

            </div>
            @Html.ValidationMessageFor(p => p.NIP)<br />

            <div class="input-group">
                <span class="input-group-addon">@Html.LabelFor(p => p.IDCard)</span>
                @Html.TextBoxFor(p => p.IDCard, new { type = "text", @class = "form-control", placeholder = "Numer dowodu" })

            </div>
            @Html.ValidationMessageFor(p => p.IDCard)<br />

            <div class="input-group">
                <span class="input-group-addon">@Html.LabelFor(p => p.PESEL)</span>
                @Html.TextBoxFor(p => p.PESEL, new { type="text", @class="form-control", placeholder="Pesel"})
            </div>
            @Html.ValidationMessageFor(p => p.PESEL)<br />

            <div class="input-group col-lg-6" style="float:none">
                <span class="input-group-addon">@Html.LabelFor(p => p.Photo)</span>
            </div>
            <input type="file" name="Photo" class="btn" id="Photo" onchange="ShowpImagePreview(this);" />
            <img id="imgprvw" alt="uploaded image preview" class="h_300 w_200" style="float:left" />
            <br />
        </div>
    </div>
        
        

        //to bedzie powstawac z imienia i nazwiska przy pomocy knockouta albo angulara
        //@Html.TextBoxFor(p => p.UserName);
       // @Html.ValidationMessageFor(p => p.UserName);<br />

        <input type="submit" class="btn col-lg-offset-5" value="Przejdz do 2 kroku" />

    }
</div>


